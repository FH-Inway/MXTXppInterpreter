<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MXTXppCompletionProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
using XppInterpreter.Parser.Metadata;

public final class MXTXppCompletionProvider implements ICompletionProvider
{
    private static List classNames, tableNames, edtNames, enumNames, globalFunctions;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getMethodDocumentation</Name>
				<Source><![CDATA[
    private str getMethodDocumentation(SysDictMethod _method)
    {
        return _method.metadataSyntax();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillMethodCompletions</Name>
				<Source><![CDATA[
    private void fillMethodCompletions(Set _methods, boolean _isTable, CompletionCollection _completions)
    {
        SetEnumerator enumerator = _methods.getEnumerator();

        while (enumerator.moveNext())
        {
            SysDictMethod method = enumerator.current() as SysDictMethod;

            Completion completion = new Completion(method.name(), method.name(), method.isStatic() ? CompletionEntryType::StaticMethod : CompletionEntryType::Method);
            completion.DocHtml = '<span>' + this.getMethodDocumentation(method) + '</span>';

            _completions.Add(completion);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>GetTableMethodCompletions</Name>
				<Source><![CDATA[
    CompletionCollection GetTableMethodCompletions(str _tableName, boolean _isStatic)
    {
        CompletionCollection completions = new CompletionCollection();

        SysDictTable dictTable = SysDictTable::newName(_tableName);

        if (!dictTable) return completions;

        this.fillMethodCompletions(dictTable.methods(!_isStatic, _isStatic, true), true, completions);

        return completions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>GetTableFieldsCompletions</Name>
				<Source><![CDATA[
    CompletionCollection GetTableFieldsCompletions(str _tableName)
    {
        CompletionCollection completions = new CompletionCollection();

        SysDictTable dictTable = SysDictTable::newName(_tableName);

        if (!dictTable) return completions;

        FieldId      fieldId = dictTable.fieldNext(0, TableScope::IncludeBaseTables);
        SysDictField dictField;

        while (fieldId)
        {
            dictField = new SysDictField(dictTable.id(), fieldId);

            Completion completion = new Completion(dictField.name(), dictField.name(), CompletionEntryType::TableField);
            completion.DocHtml = '<span>' + dictField.name() + " " + dictField.typeName() + '</span>';

            completions.Add(completion);

            fieldId = dictTable.fieldNext(fieldId, TableScope::IncludeBaseTables);
        }

        return completions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>GetClassMethodCompletions</Name>
				<Source><![CDATA[
    CompletionCollection GetClassMethodCompletions(str _className, boolean _isStatic)
    {
        CompletionCollection completions = new CompletionCollection();

        SysDictClass dictClass = SysDictClass::newName(_className);

        if (!dictClass) return completions;

        this.fillMethodCompletions(dictClass.methods(!_isStatic, _isStatic, true), false, completions);

        return completions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>GetEnumCompletions</Name>
				<Source><![CDATA[
    CompletionCollection GetEnumCompletions(str _enumName)
    {
        CompletionCollection completions = new CompletionCollection();
        
        SysDictEnum dictEnum = new SysDictEnum(enumName2Id(_enumName));

        if (!dictEnum) return completions;

        for (int i = 0; i < dictEnum.values(); i++)
        {
            str symbol = dictEnum.index2Symbol(i);
            completions.Add(new Completion(symbol, symbol, CompletionEntryType::EnumValue));
        }

        return completions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>stringEnumeratorToList</Name>
				<Source><![CDATA[
    private static List stringEnumeratorToList(System.Collections.Specialized.StringEnumerator _enumerator)
    {
        List list = new List(Types::String);

        while (_enumerator.MoveNext())
        {
            list.addEnd(_enumerator.Current);
        }

        return list;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getClassNames</Name>
				<Source><![CDATA[
    public static List getClassNames()
    {
        if (classNames)
        {
            return classNames;
        }

        classNames = MXTXppCompletionProvider::stringEnumeratorToList(Microsoft.Dynamics.Ax.Xpp.MetadataSupport::ClassNames());

        return classNames;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTableNames</Name>
				<Source><![CDATA[
    public static List getTableNames()
    {
        if (tableNames)
        {
            return tableNames;
        }

        tableNames = MXTXppCompletionProvider::stringEnumeratorToList(Microsoft.Dynamics.Ax.Xpp.MetadataSupport::TableNames());

        return tableNames;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEDTNames</Name>
				<Source><![CDATA[
    public static List getEDTNames()
    {
        if (edtNames)
        {
            return edtNames;
        }

        edtNames = MXTXppCompletionProvider::stringEnumeratorToList(Microsoft.Dynamics.Ax.Xpp.MetadataSupport::EdtNames());

        return edtNames;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnumNames</Name>
				<Source><![CDATA[
    public static List getEnumNames()
    {
        if (enumNames)
        {
            return enumNames;
        }

        enumNames = MXTXppCompletionProvider::stringEnumeratorToList(Microsoft.Dynamics.Ax.Xpp.MetadataSupport::EnumNames());

        return enumNames;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getGlobalFunctions</Name>
				<Source><![CDATA[
    public static List getGlobalFunctions()
    {
        if (globalFunctions)
        {
            return globalFunctions;
        }

        globalFunctions = new List(Types::String);

        MXTXppCompletionProvider::fillClassMethodList(globalFunctions, classStr(Global), true, false);
        MXTXppCompletionProvider::fillClassMethodList(globalFunctions, classStr(MXTXppPredefinedFunctions), true, false);

        return globalFunctions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillClassMethodList</Name>
				<Source><![CDATA[
    private static void fillClassMethodList(List _list, ClassName _className, boolean _static, boolean _instance)
    {
        SysDictClass  globalDict = SysDictClass::newName(_className);
        SetEnumerator globalMethodsEnumerator = globalDict.methods(_instance, _static, false).getEnumerator();
        
        while (globalMethodsEnumerator.moveNext())
        {
            SysDictMethod method = globalMethodsEnumerator.current();

            _list.addEnd(method.name());
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>