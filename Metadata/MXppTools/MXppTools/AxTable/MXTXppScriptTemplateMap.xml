<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MXTXppScriptTemplateMap</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MXTXppScriptTemplateMap extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>generateMappings</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public static void generateMappings(MXTXppScriptTemplate _template)
    {
        var regex = new System.Text.RegularExpressions.Regex("%.*?%");
        System.Collections.IEnumerator enumerator = regex.Matches(_template.SourceCode).GetEnumerator();
        
        Set placeholders = new Set(Types::String);

        while (enumerator.MoveNext())
        {
            System.Text.RegularExpressions.Match match = enumerator.Current;
            str value = match.Value;

            if (!placeholders.in(value))
            {
                placeholders.add(value);

                // Find equivalent placeholder
                MXTXppScriptTemplateMap map = MXTXppScriptTemplateMap::find(_template.TemplateId, value, true);

                if (!map)
                {
                    map.clear();
                    map.TemplateId  = _template.TemplateId;
                    map.Placeholder = value;
                    map.Name        = strRem(value, '%');
                    map.insert();
                }
            }
        }

        ttsbegin;

        // Delete non-matching placeholders
        MXTXppScriptTemplateMap map;
        while select map
            where map.TemplateId == _template.TemplateId
        {
            if (!placeholders.in(map.Placeholder))
            {
                map.selectForUpdate(true);
                map.delete();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static MXTXppScriptTemplateMap find(MXTTemplateId _templateId, MXTTemplatePlaceholder _placeholder, boolean _forUpdate = false)
    {
        MXTXppScriptTemplateMap map;

        select firstonly map
            index PlaceholderIdx
            where map.TemplateId == _templateId &&
                  map.Placeholder == _placeholder;

        if (_forUpdate)
        {
            map.selectForUpdate(true);
        }

        return map;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>TemplateId</Name>
			<ExtendedDataType>MXTTemplateId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Placeholder</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>MXTTemplatePlaceholder</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>LookupType</Name>
			<EnumType>MXTTemplateMapLookupType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Name</Name>
			<ExtendedDataType>Name</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>PlaceholderIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>TemplateId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>Placeholder</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>MXTXppScriptTemplate</Name>
			<RelatedTable>MXTXppScriptTemplate</RelatedTable>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>TemplateId</Name>
					<Field>TemplateId</Field>
					<RelatedField>TemplateId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>